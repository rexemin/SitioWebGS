{
    "length":77,
    "numCab":20,
    "numTab":22,
    "pt1":"Introducción",
    "pt2":"Proyecto",
    "pt3":"Publicaciones",
    "pt4":"Sustentabilidad",
    "pt5":"Prácticas",
    "pt6":"Referencias",
    "pt7":"Contacto",
    "pt8":"English",
    "pt9":"Software Verde",
    "pt10":"Introducción",
    "pt11":"Las tecnologías de la información (TI) tienen una influencia significativa en las iniciativas de desarrollo sustentable. Se cree que pueden ayudar a disminuir el impacto de las actividades industriales y humanas al minimizar el consumo de energía eléctrica y otros recursos durante su desarrollo y operación. Aunque se han desarrollado tecnologías para reducir el impacto de las TI en el medio ambiente, particularmente en el área de hardware, la investigación y desarrollo de tecnologías de software que contribuyan al  desarrollo sustentable está en etapas iniciales.",
    "pt12":"En una computadora, el hardware es responsable del consumo de energía eléctrica. Sin embargo, el software se encarga de controlar el hardware y de facilitar distintos procesos organizacionales. Por tanto, el software consume energía eléctrica de forma indirecta. Algunas investigaciones han mostrado que la forma en que los sistemas de software están diseñados, programados y desplegados tiene un impacto variable en el consumo de energía eléctrica. El software que reduce su impacto negativo en el medio ambiente y contribuye a las metas del desarrollo sustentable se conoce como software verde.",
    "pt13":"Identificación de prácticas de desarrollo de software que contribuyen al desarrollo del software verde",
    "pt14":"<strong>Clave: USO315002885</strong>",
    "pt15":"<strong>Responsable del proyecto: Gabriel Alberto García Mireles</strong>",
    "pt16":"Objetivo:",
    "pt17":"Identificar prácticas de desarrollo de software que tienen un impacto potencial positivo en el medio ambiente. En este trabajo nos centraremos en el software de aplicación y las prácticas recomendadas se clasificarán según las etapas del ciclo de vida del producto. Como resultado de este proyecto, se elaborará un modelo conceptual de prácticas de mejora para el desarrollo de software verde considerando los procesos del ciclo de vida del software.",
    "pt18":"Publicaciones",
    "pt19":"García-Mireles, G.A., Moraga, M. A., García, F., Calero, C.,  Piattini , M. 2017.<strong> Interactions between environmental sustainability goals and software product quality: A mapping study.</strong>  Information and Software Technology (En prensa).<br><a href=\"http://dx.doi.org/10.1016/j.infsof.2017.10.002\"> http://dx.doi.org/10.1016/j.infsof.2017.10.002</a>.",
    "pt20":"García-Mireles, G.A., Moraga, M. A., García, F., Piattini, M. 2017. <strong>A classification approach of sustainability aware requirements methods.</strong> En Proceedings of the 12th Iberian Conference on Information Systems and Technologies. P. 1-6. ISBN print: 978-1-5090-5047-5.<br><a href=\"https://doi.org/10.23919/CISTI.2017.7975813\">https://doi.org/10.23919/CISTI.2017.7975813</a>.",
    "pt21":"Sustentabilidad en ingeniería de Software",
    "pt22":"La sustentabilidad es definida por el diccionario de Oxford como “La habilidad para ser mantenido a un cierto ritmo o nivel ” así como “evitar el agotamiento de recursos naturales para mantener un orden ecológico.” La primera definición sugiere mantener una cosa (o sistema) en el mismo estado por un tiempo continuo o largo en donde lo último está relacionado a la protección ambiental.",
    "pt23":"Una noción de sustentabilidad se deriva de la definición de desarrollo sustentable del reporte Brundtland: la habilidad de “satisfacer las necesidades del presente sin comprometer la habilidad de futuras generaciones de satisfacer sus necesidades.” Dentro de esta definición se consideran tres dimensiones: ambiental, social, y económica (Calero & Piattini 2015).",
    "pt24":"Ambas definiciones generales han sido usadas para establecer una base para el desarrollo de nuevas nociones del concepto en el contexto de software sustentable y de ingeniería de software sustentable (Calero & Piattini, 2015; Becker et al., 2015; Venters et al. 2014). Algunas definiciones sobre software sustentable y de ingeniería de software sustentable son como siguen.",
    "pt25":"<strong>Software sustentable</strong> es “energéticamente eficiente, minimiza el impacto ambiental de los procesos que soporta, y tiene un impacto social positivo en la sustentabilidad social y/o económica. Estos impactos pueden ocurrir directa (energía) o indirectamente (mitigado por servicio) o como un efecto de rebote” (Penzenstadler et al., 2014).",
    "pt26":"<strong>Software sustentable</strong> es “software cuyos impactos en la economía, la sociedad, las personas, y el ambiente que resultan de su desarrollo, despliegue, y uso son mínimos y/o que tienen un efecto positivo en el desarrollo sustentable.” (Dick & Naumann, 2010).",
    "pt27":"<strong>Verde en ingeniería de software</strong> como “esas prácticas que hacen la aplicación de la ingeniería al software al tomar en cuenta aspectos ambientales. El desarrollo, operación y mantenimiento de software es, por lo tanto, llevado a cabo de manera verde y produce un producto verde de software.” (Calero & Piattini, 2015).",
    "pt28":"El propósito de la <strong>ingeniería de software sustentable</strong> es “crear software confiable y duradero que satisface las necesidades de los usuarios mientras reduce impactos ambientales.” (Amsel et al., 2011).",
    "pt29":"En términos de Dick & Naumann (2011), “La <strong>Ingeniería de Software Sustentable</strong> es el arte de definir y desarrollar productos de software de manera que los impactos negativos y positivos que resultan y/o que son esperados que ocurran en la sustentabilidad a lo largo del ciclo de vida completo del producto de software son continuamente evaluados, documentados, y optimizados.”",
    "pt30":"Respecto al software, algunos autores usan <strong>sustentabilidad</strong> mientras que otros se refieren al término verde (Calero & Piattini, 2015). Estos términos se refieren a conceptos distintos. Mientras que sustentabilidad se enfoca en las tres dimensiones del desarrollo sustentable, el término verde se centra principalmente en la eficiencia energética del software mientras este es desarrollado y usado.",
    "pt31":"Dimensiones de la sustentabilidad",
    "pt32":"La sustentabilidad a lo largo del desarrollo de software requiere una “descomposición tangible del concepto de sustentabilidad” (Penzendstadler & Femmer, 2013) expresado como dimensiones. Las dimensiones más comunes se derivan del reporte Bruntland y son las siguientes: dimensión ambiental, dimensión social, y dimensión económica. Adicionalmente, varios investigadores del campo de ingeniería de software han propuesto la dimensión individual y la dimensión técnica. Cada una está enfocada en problemas particulares que pueden ser abordados por sistemas de software. Por ejemplo, Penzendstadler & Femmer (2013) propusieron las siguientes dimensiones:",
    "pt33":"Dimensión ambiental",
    "pt34":"Se concentra en proteger recursos encontrados en el ambiente natural, así como servicios de los ecosistemas. Como desarrolladores de software, debemos entender el impacto del software en el ambiente durante su ciclo de vida, i.e., desde su comienzo hasta su retiro.",
    "pt35":"Dimensión social",
    "pt36":"Busca mantener el capital social y preservar la solidaridad de las comunidades. En el contexto del software, los investigadores deben estudiar el efecto que tienen los sistemas de software en la sociedad en dominios como comunicación, gobierno, sistemas educativos, entre otros.",
    "pt37":"Dimensión económica",
    "pt38":"Se centra en mantener o incrementar bienes y en desarrollar productos y servicios de valor agregado. Los desarrolladores de software deben crear software de manera que las metas de las partes interesadas puedan ser satisfechas.",
    "pt39":"Dimensión individual",
    "pt40":"Busca el bien individual y mejorar el capital humano individual. La salud, la educación, las habilidades y el conocimiento son aspectos relacionados con el capital humano. Como desarrolladores de software, debemos elaborar (o usar) métodos para crear software que nos permitan estar satisfechos por largos periodos de tiempo con nuestro trabajo.",
    "pt41":"Dimensión técnica",
    "pt42":"Se enfoca en el uso a largo plazo de los sistemas y a su evolución considerando cambios en el ambiente del sistema hecho por el humano. Así, los desarrolladores de software deben crear software que pueda ser adaptado fácilmente a nuevos requisitos.",
    "pt43":"Cada dimensión considera perspectivas particulares de estudio cuando el desarrollo sustentable es tomado en cuenta. Aunque podemos enfocarnos en una única dimensión para estudiar o desarrollar métodos para crear software, es sugerido que el desarrollo sustentable es alcanzado cuando un balance entre las metas de sustentabilidad, derivadas de estas dimensiones, se encuentra.",
    "pt44":"Prácticas",
    "pt45":"Se han evaluado varias prácticas para el desarrollo de software con respecto a la sustentabilidad. En García-Mireles et al. (2017), los lectores pueden encontrar un conjunto de artículos que discuten la manera en que prácticas, métodos, y técnicas influyen tanto en el consumo energético del software como la calidad del mismo. La mayoría de los estudios reportados son o teóricos o experimentos llevados a cabo en un ambiente controlado. Así, los profesionales deben analizar hasta que grado se pueden usar estas propuestas y resultados en su respectivo dominio de aplicación.",
    "pt46":"En los siguientes párrafos, presentamos algunas de estas prácticas categorizándolas por áreas del conocimiento del desarrollo de software descritas en el Software Engineering Body of Knowledge (Bourque y Fairley, 2014).",
    "pt47":"<strong>Proceso de ingeniería de software</strong>",
    "pt48":"<strong>Mantenimiento de software</strong>",
    "pt49":"<strong>Construcción de software</strong>",
    "pt50":"<strong>Diseño de software</strong>",
    "pt51":"<strong>Requisitos de software</strong>",
    "pt52":"Referencias",
    "pt53":"García-Mireles, G.A., Moraga, M. A., García, F., Calero, C.,  Piattini , M. (2017). <strong>Interactions between environmental sustainability goals and software product quality: A mapping study.</strong>  Information and Software Technology (En prensa), <a href=\"http://dx.doi.org/10.1016/j.infsof.2017.10.002\">http://dx.doi.org/10.1016/j.infsof.2017.10.002</a>",
    "pt54":"<strong>Sustainability</strong>. s/f. English Oxford Dictionaries. Consultado en 21 de julio, 2017 de <a href=\"https://en.oxforddictionaries.com/definition/sustainability\">https://en.oxforddictionaries.com/definition/sustainability</a>",
    "pt55":"Manotas, I., Bird, C., Zhang, R., Shepherd, D., Jaspan, C., Sadowski, C., ... & Clause, J. (2016, Mayo). <strong>An empirical study of practitioners' perspectives on green software engineering</strong>. En Software Engineering (ICSE), 2016 IEEE/ACM 38th International Conference on (pp. 237-248). IEEE.",
    "pt56":"Calero, C., & Piattini, M. (2015). <strong>Introduction to green in software engineering</strong>. En Green in Software Engineering (pp. 3-27). Springer International Publishing.",
    "pt57":"Moura, I., Pinto, G., Ebert, F., & Castor, F. (2015, Mayo). <strong>Mining energy-aware commits.</strong> En Proceedings of the 12th Working Conference on Mining Software Repositories (pp. 56-67). IEEE Press.",
    "pt58":"Becker, C., Chitchyan, R., Duboc, L., Easterbrook, S., Penzenstadler, B., Seyff, N., & Venters, C. C. (2015, Mayo). <strong>Sustainability design and software: the karlskrona manifesto.</strong> En Software Engineering (ICSE), 2015 IEEE/ACM 37th IEEE International Conference on (Vol. 2, pp. 467-476). IEEE.",
    "pt59":"Penzenstadler, B. (2015). <strong>From requirements engineering to green requirements engineering.</strong> En Green in Software Engineering (pp. 157-186). Springer International Publishing.",
    "pt60":"Ardito, L., Procaccianti, G., Torchiano, M., & Vetro, A. (2015). <strong>Understanding green software development: A conceptual framework.</strong> IT Professional, 17(1), 44-50.",
    "pt61":"Bomfim, C., Nunes, W., Duboc, L., & Schots, M. (2014, Agosto). <strong>Modelling sustainability in a procurement system: An experience report.</strong> En Requirements Engineering Conference (RE), 2014 IEEE 22nd International (pp. 402-411). IEEE.",
    "pt62":"Venters, C. C., Jay, C., Lau, L. M. S., Griffiths, M. K., Holmes, V., Ward, R. R., ... & Xu, J. (2014). <strong>Software sustainability: The modern tower of babel.</strong> En CEUR Workshop Proceedings (Vol. 1216, pp. 7-12). CEUR.",
    "pt63":"Sahin, C., Pollock, L., & Clause, J. (2014, Septiembre). <strong>How do code refactorings affect energy usage?</strong>. En Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (p. 36). ACM.",
    "pt64":"Park, J. J., Hong, J. E., & Lee, S. H. (2014). <strong>Investigation for Software Power Consumption of Code Refactoring Techniques.</strong> En SEKE (pp. 717-722).",
    "pt65":"Penzenstadler, B., Raturi, A., Richardson, D., Calero, C., Femmer, H., & Franch, X. (2014, Mayo). <strong>Systematic mapping study on software engineering for sustainability</strong> (SE4S). En Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering (p. 14). ACM.",
    "pt66":"Bourque, P., & Fairley, R. E. (2014). <strong>Guide to the software engineering body of knowledge</strong> (SWEBOK (R)): Version 3.0. IEEE Computer Society Press.",
    "pt67":"Penzenstadler, B., & Femmer, H. (2013, Marzo). <strong>A generic model for sustainability with process-and product-specific instances.</strong> En Proceedings of the 2013 workshop on Green in/by software engineering (pp. 3-8). ACM.",
    "pt68":"Lami, G., & Buglione, L. (2012, Octubre). <strong>Measuring software sustainability from a process-centric perspective.</strong> En Software Measurement and the 2012 Seventh International Conference on Software Process and Product Measurement (IWSM-MENSURA), 2012 Joint Conference of the 22nd International Workshop on (pp. 53-59). IEEE.",
    "pt69":"Amsel, N., Ibrahim, Z., Malik, A., & Tomlinson, B. (2011, Mayo). <strong>Toward sustainable software engineering (nier track).</strong> En Proceedings of the 33rd International Conference on Software Engineering (pp. 976-979). ACM.",
    "pt70":"Mahaux, M., Heymans, P., & Saval, G. (2011). <strong>Discovering sustainability requirements: an experience report.</strong> Requirements engineering: foundation for software quality, 19-33.",
    "pt71":"Dick, M., & Naumann, S. (2010). <strong>Enhancing Software Engineering Processes towards Sustainable Software Product Design.</strong> En EnviroInfo (pp. 706-715).",
    "pt72":"Brundtland, G. H. (1987). <strong>World commission on environment and development (1987): Our common future.</strong> World Commission for Environment and Development.",
    "pt73":"Contacto",
    "pt74":"<a style=\"color: #0091B2;\"><span class=\"__cf_email__\" data-cfemail=\"137e7a61767f7660537e72673d66607c7d3d7e6b\">[email&#160;protected]</span></a><br>Universidad de Sonora<br>Departamento de Matemáticas",
    "pt75":"Proyecto de la Universidad de Sonora",
    "pt76":"Responsable: Gabriel Alberto García Mireles",
    "pt77":"Apoyo: Ivan Moreno, Bárbara Galindo, José Pimienta",
    "th1":"Autor",
    "th2":"Práctica",
    "th3":"Tipo de Investigación",
    "th4":"Dominio de aplicación",
    "tab1":"Lami & Buglione, 2012",
    "tab2":"Propone tres procesos para integrar la cultura verde en las organizaciones de software:",
    "tab3":"• Administración de la sostenibilidad",
    "tab4":"• Ingeniería de la sostenibilidad",
    "tab5":"• Aptitud de la sostenibilidad",
    "tab6":"Teórico",
    "tab7":"Ninguno",
    "tab8":"Los resultados de encuestas muestran que los profesionales sacrificaron el uso de energía y el rendimiento cuando la característica del software es construida. La decisión puede ser realizada en las etapas de diseño, construcción o pruebas",
    "tab9":"Basado en encuestas",
    "tab10":"Desarrolladores de software tradicional, aplicaciones de centros de datos, aplicaciones web, y aplicaciones móviles",
    "tab11":"Las técnicas de refactorización pueden tener efectos tanto positivos como negativos en la eficiencia energética",
    "tab12":"Experimento",
    "tab13":"Aplicaciones de Java y código en C++",
    "tab14":"Minimizar el número de bugs en el software debido a que están relacionados en aumentos inesperados en el consumo de energía",
    "tab15":"Minería de datos de GitHub",
    "tab16":"Proyectos de software desarrollados en C, Java, C++, entre otros",
    "tab17":"Diseño de software auto adaptativo considerando el consumo de energía de los recursos",
    "tab18":"Teórico",
    "tab19":"Móvil",
    "tab20":"Lenguajes para el modelado de metas pueden apoyar a la identificación de metas de sostenibilidad y al análisis de estas",
    "tab21":"Ejemplos y algunos casos de estudio",
    "tab22":"Sistemas de software desarrollados para apoyar el uso compartido de automóviles entre usuarios, un sistema de obtención para el sector petrolero, un sistema de planeación de eventos"
}
