{
    "length":77,
    "numCab":20,
    "numTab":22,
    "pt1":"Introduction",
    "pt2":"Project",
    "pt3":"Publications",
    "pt4":"Sustainability",
    "pt5":"Practices",
    "pt6":"References",
    "pt7":"Contact",
    "pt8":"Español",
    "pt9":"Green Software",
    "pt10":"Introduction",
    "pt11":"Information technologies (IT) have a significant influence on sustainable development initiatives. It is believed that they can help decrease the impact of industrial and human activities during their development and operation by minimizing the consumption of electric power and other resources. Although technologies to reduce the environmental impact of IT have been developed, particularly hardware-wise, research and development of software technologies that contribute to a sustainable development are only in its initial stages.",
    "pt12":"On a computer, hardware is responsible for electric power consumption. Nonetheless, software oversees hardware operation and facilitates different organizational processes. Therefore, software consumes electric power indirectly. Some investigations have shown that the way software is designed, programmed and displayed has a variable impact on electric power consumption. Software that diminishes its negative impact on the environment and contributes to sustainable development goals is known as green software.",
    "pt13":"Identification of software engineering practices that contribute to the development of green software",
    "pt14":"Key: USO315002885",
    "pt15":"Head of project: Gabriel Alberto  García Mireles",
    "pt16":"Objective:",
    "pt17":"To identify software development practices that have a potential positive environmental impact. In this endeavor we’ll focus on application software and the recommended practices will be classified according to the stages of the product life cycle. As a result of this project, a conceptual model of green software improvement practices that considers software life cycle processes will be made.",
    "pt18":"Publications",
    "pt19":"García-Mireles, G.A., Moraga, M. A., García, F., Calero, C.,  Piattini , M. 2017.<strong> Interactions between environmental sustainability goals and software product quality: A mapping study.</strong>  Information and Software Technology (In print).<br><a href=\"http://dx.doi.org/10.1016/j.infsof.2017.10.002\"> http://dx.doi.org/10.1016/j.infsof.2017.10.002</a>.",
    "pt20":"García-Mireles, G.A., Moraga, M. A., García, F., Piattini, M. 2017. <strong>A classification approach of sustainability aware requirements methods.</strong> In Proceedings of the 12th Iberian Conference on Information Systems and Technologies. P. 1-6. ISBN print: 978-1-5090-5047-5.<br><a href=\"https://doi.org/10.23919/CISTI.2017.7975813\">https://doi.org/10.23919/CISTI.2017.7975813</a>.",
    "pt21":"Sustainability in Software Engineering",
    "pt22":"Sustainability is defined by Oxford dictionary (sustainability, s/f) as “The ability to be maintained at a certain rate or level” as well as “Avoidance of the depletion of natural resources in order to maintain an ecological balance.”  The first definition suggests maintaining a thing (or system) for a continuous or long time in the same state where the latter is related to environmental protection.  ",
    "pt23":"From the Brundtland report (1987), sustainability notion is derived from sustainable development definition: ability to “meet the needs of the present without compromising the ability of future generations to meet their needs”. Within this definition, three dimensions are considered: environmental, social, and economical (Calero and Piattini, 2015). ",
    "pt24":"Both general definitions have been used to establish a basis for developing new notions of the concept in the context of sustainable software and sustainable software engineering (Calero and Piattini, 2015; Becker et al., 2015; Venters et al., 2014). Some definitions about sustainable software and sustainable software engineering are as follows.",
    "pt25":"<strong>Sustainable software</strong> is “energy efficient, minimizes the environmental impact of the processes it supports, and has a positive impact on social and/or economic sustainability. These impacts can occur direct (energy), indirect (mitigated by service) or as rebound effect” (Penzenstadler et al., 2014).",
    "pt26":"<strong>Sustainable software</strong> is “software whose impacts on economy, society, human beings, and environment that result from development, deployment, and usage of the software are minimal and/or which have a positive effect on sustainable development (Dick and Naumann, 2010)",
    "pt27":"<strong>Green in software engineering</strong> as “those practices which make the application of the engineering to software by taking into consideration environmental aspects. The development, operation and maintenance of software are therefore carried out in a green manner and produce a green software product.” (Calero and Piattini, 2015).",
    "pt28":"The purpose of <strong>sustainable software engineering</strong> is “to create reliable, long-lasting software that meets the needs of users while reducing environmental impacts” (Amsel et al., 2011).",
    "pt29":"In terms of Dick and Naumann (2011), “<strong>Sustainable Software Engineering</strong> is the art of defining and developing software products in a way so that the negative and positive impacts on sustainability that result and/or are expected to result from the software product over its whole lifecycle are continuously assessed, documented, and optimized.”",
    "pt30":"As regards software, some authors use <strong>sustainable (or sustainability)</strong> while others refer to the term <strong>green (or greenability)</strong> (Calero and Piattini, 2015). These terms refers to different concepts. While the sustainability addresses the three dimensions of sustainable development, the green term is mainly focused on energy efficiency of software while it is developed and used.",
    "pt31":"Sustainability dimensions",
    "pt32":"Sustainability during software development requires a “tangible decomposition of the concept of sustainability” (Penzendstadler and Femmer, 2013) expressed as dimensions. The most common dimensions are derived from Bruntland report and they are environmental dimension, social dimension, and economic dimension. In addition, several researchers in the field of software engineering have proposed the individual dimension as well as the technical dimension. Each dimension is focused in particular issues that can be addressed by software systems. For instance, Penzendstadler and Femmer (2013) proposed following dimensions:",
    "pt33":"Environmental dimension",
    "pt34":"The environmental dimension is focused on protecting resources found in the natural environment as well as ecosystem services. As software developers, we must understand the software impact in the environment during its life cycle, i.e., from its inception to its retirement.",
    "pt35":"Social dimension",
    "pt36":"The social dimension seeks to maintain social capital and preserve solidarity of communities. In the context of software, researchers should study the effect software systems have on society in domains such as communication, government, education systems, among others.",
    "pt37":"Economic dimension",
    "pt38":"The economic dimension is centered on maintaining or increasing assets and developing products and services of added value. Software developers should create software in a way the financial stakeholders’ goals can be meet.",
    "pt39":"Individual dimension",
    "pt40":"The individual sustainability looks for individual welfare and to improve the individual human capital. Health, schooling, skills and knowledge are aspects related to human capital. As software developers, we should develop (or use) methods to create software that allow us to be satisfied with our work for long periods of time.",
    "pt41":"Technical dimension",
    "pt42":"Technical dimension is focused on long-term usage of systems and their evolution considering changes in the man-made system environment. Thus, software developers should create software that can be easily adapted to new requirements.",
    "pt43":"Each dimension considers particular study perspectives when sustainable development is taken into account. Although we can focus on only one dimension to study or develop methods for creating software, it is suggested that sustainable development is fulfilled when a balance among sustainability goals, derived from these dimensions, is met.",
    "pt44":"Practices",
    "pt45":"Several practices for developing software have been evaluated with regards to sustainability. In García-Mireles et al. (2017), readers can find a set of papers discussing the way practices, methods, and techniques influence both software energy consumption and software quality. Majority of studies reported are either theoretical or experiments carried out in a controlled environment.  Thus, practitioners should analyze the extent these proposals and results can be used in their respective application domain.",
    "pt46":"In the following paragraphs, we present some of these practices categorized by software development knowledge areas described into the Software Engineering Body of Knowledge (Bourque and Fairley, 2014).",
    "pt47":"Software engineering process",
    "pt48":"Software maintenance",
    "pt49":"Software construction",
    "pt50":"Software design",
    "pt51":"Software requirements",
    "pt52":"References",
    "pt53":"García-Mireles, G.A., Moraga, M. A., García, F., Calero, C.,  Piattini , M. (2017). <strong>Interactions between environmental sustainability goals and software product quality: A mapping study.</strong>  Information and Software Technology (In print), <a href=\"http://dx.doi.org/10.1016/j.infsof.2017.10.002\">http://dx.doi.org/10.1016/j.infsof.2017.10.002</a>",
    "pt54":"<strong>Sustainability</strong>. s/f. English Oxford Dictionaries. Consulted on July 21, 2017 from <a href=\"https://en.oxforddictionaries.com/definition/sustainability\">https://en.oxforddictionaries.com/definition/sustainability</a>",
    "pt55":"Manotas, I., Bird, C., Zhang, R., Shepherd, D., Jaspan, C., Sadowski, C., ... & Clause, J. (2016, May). <strong>An empirical study of practitioners' perspectives on green software engineering</strong>. In Software Engineering (ICSE), 2016 IEEE/ACM 38th International Conference on (pp. 237-248). IEEE.",
    "pt56":"Calero, C., & Piattini, M. (2015). <strong>Introduction to green in software engineering</strong>. In Green in Software Engineering (pp. 3-27). Springer International Publishing.",
    "pt57":"Moura, I., Pinto, G., Ebert, F., & Castor, F. (2015, May). <strong>Mining energy-aware commits.</strong> In Proceedings of the 12th Working Conference on Mining Software Repositories (pp. 56-67). IEEE Press.",
    "pt58":"Becker, C., Chitchyan, R., Duboc, L., Easterbrook, S., Penzenstadler, B., Seyff, N., & Venters, C. C. (2015, May). <strong>Sustainability design and software: the karlskrona manifesto.</strong> In Software Engineering (ICSE), 2015 IEEE/ACM 37th IEEE International Conference on (Vol. 2, pp. 467-476). IEEE.",
    "pt59":"Penzenstadler, B. (2015). <strong>From requirements engineering to green requirements engineering.</strong> In Green in Software Engineering (pp. 157-186). Springer International Publishing.",
    "pt60":"Ardito, L., Procaccianti, G., Torchiano, M., & Vetro, A. (2015). <strong>Understanding green software development: A conceptual framework.</strong> IT Professional, 17(1), 44-50.",
    "pt61":"Bomfim, C., Nunes, W., Duboc, L., & Schots, M. (2014, August). <strong>Modelling sustainability in a procurement system: An experience report.</strong> In Requirements Engineering Conference (RE), 2014 IEEE 22nd International (pp. 402-411). IEEE.",
    "pt62":"Venters, C. C., Jay, C., Lau, L. M. S., Griffiths, M. K., Holmes, V., Ward, R. R., ... & Xu, J. (2014). <strong>Software sustainability: The modern tower of babel.</strong> In CEUR Workshop Proceedings (Vol. 1216, pp. 7-12). CEUR.",
    "pt63":"Sahin, C., Pollock, L., & Clause, J. (2014, September). <strong>How do code refactorings affect energy usage?</strong>. In Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (p. 36). ACM.",
    "pt64":"Park, J. J., Hong, J. E., & Lee, S. H. (2014). <strong>Investigation for Software Power Consumption of Code Refactoring Techniques.</strong> In SEKE (pp. 717-722).",
    "pt65":"Penzenstadler, B., Raturi, A., Richardson, D., Calero, C., Femmer, H., & Franch, X. (2014, May). <strong>Systematic mapping study on software engineering for sustainability</strong> (SE4S). In Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering (p. 14). ACM.",
    "pt66":"Bourque, P., & Fairley, R. E. (2014). <strong>Guide to the software engineering body of knowledge</strong> (SWEBOK (R)): Version 3.0. IEEE Computer Society Press.",
    "pt67":"Penzenstadler, B., & Femmer, H. (2013, March). <strong>A generic model for sustainability with process-and product-specific instances.</strong> In Proceedings of the 2013 workshop on Green in/by software engineering (pp. 3-8). ACM.",
    "pt68":"Lami, G., & Buglione, L. (2012, October). <strong>Measuring software sustainability from a process-centric perspective.</strong> In Software Measurement and the 2012 Seventh International Conference on Software Process and Product Measurement (IWSM-MENSURA), 2012 Joint Conference of the 22nd International Workshop on (pp. 53-59). IEEE.",
    "pt69":"Amsel, N., Ibrahim, Z., Malik, A., & Tomlinson, B. (2011, May). <strong>Toward sustainable software engineering (nier track).</strong> In Proceedings of the 33rd International Conference on Software Engineering (pp. 976-979). ACM.",
    "pt70":"Mahaux, M., Heymans, P., & Saval, G. (2011). <strong>Discovering sustainability requirements: an experience report.</strong> Requirements engineering: foundation for software quality, 19-33.",
    "pt71":"Dick, M., & Naumann, S. (2010). <strong>Enhancing Software Engineering Processes towards Sustainable Software Product Design.</strong> In EnviroInfo (pp. 706-715).",
    "pt72":"Brundtland, G. H. (1987). <strong>World commission on environment and development (1987): Our common future.</strong> World Commission for Environment and Development.",
    "pt73":"Contact",
    "pt74":"<a style=\"color: #0091B2;\"><span class=\"__cf_email__\" data-cfemail=\"137e7a61767f7660537e72673d66607c7d3d7e6b\">[email&#160;protected]</span></a><br>Universidad de Sonora<br>Departamento de Matemáticas",
    "pt75":"A Universidad de Sonora project",
    "pt76":"Responsible: Gabriel Alberto García Mireles",
    "pt77":"With support from: Ivan Moreno, Bárbara Galindo, José Pimienta",
    "th1":"Author",
    "th2":"Practice",
    "th3":"Type of research",
    "th4":"Application domain",
    "tab1":"Lami and Buglione, 2012",
    "tab2":"Propose three processes to integrate greenness culture in software organizations:",
    "tab3":"• Sustainability Management ",
    "tab4":"• Sustainability engineering",
    "tab5":"• Sustainability qualification",
    "tab6":"Theoretical",
    "tab7":"None",
    "tab8":"Survey results show that practitioners traded off energy usage and performance when software feature is constructed. The decision can be made in design, construction or testing stages",
    "tab9":"Survey-based",
    "tab10":"Developers of traditional software, data center apps, web apps, and mobile apps ",
    "tab11":"Refactoring techniques can have both positive and negative effect on energy efficiency",
    "tab12":"Experiment",
    "tab13":"Java applications and C++ code",
    "tab14":"Minimize number of bugs in software since they are related to unexpected increase in energy consumption",
    "tab15":"Data mining from GitHub",
    "tab16":"Software projects developed in C, Java, C++, among others",
    "tab17":"Self-adaptation software design considering energy consumption of resources",
    "tab18":"Theoretical",
    "tab19":"Mobile domain",
    "tab20":"Goal modeling languages can support the identification of sustainability goals and support the analysis of them",
    "tab21":"Examples and some case studies",
    "tab22":"Software systems developed for supporting car-sharing among users, procurement system for oil sector, planning events system"
}
